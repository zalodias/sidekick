---
import type { HTMLAttributes } from "astro/types";
import { Icon } from "astro-icon/components";

interface Props extends HTMLAttributes<"a"> {
  class?: string;
  context?: "neutral" | "brand";
  href: string;
  iconLeading?: string;
  iconTrailing?: string;
  variant?: "solid" | "flat";
}

const {
  class: className,
  context = "neutral",
  href,
  iconLeading,
  iconTrailing,
  variant = "solid",
  ...props
} = Astro.props;
---

<a
  class:list={[`link link--${context} link--${variant}`, className]}
  href={href}
  {...props}
>
  {iconLeading && <Icon name={iconLeading} />}
  <slot />
  {iconTrailing && <Icon name={iconTrailing} />}
</a>

<style>
  .link {
    display: inline-flex;
    inline-size: fit-content;
    place-content: center;
    gap: 0.25rem;
    font-weight: 500;
    transition: all var(--motion-transition-duration);
  }

  .link--solid {
    padding: 0.5rem 0.75rem;
    border-radius: 2rem;
  }

  .link--solid:active {
    scale: 0.96;
  }

  .link--solid.link--brand {
    background-color: var(--color-background-brand);
    color: var(--color-foreground-inverse);
  }

  .link--solid.link--neutral {
    background-color: var(--color-background-inverse);
    color: var(--color-foreground-inverse);
  }

  .link--flat {
    background-color: transparent;
    padding: 0;
  }

  .link--flat.link--brand {
    color: var(--color-foreground-brand);
  }

  .link--flat.link--neutral {
    color: var(--color-foreground-default);
  }
</style>
